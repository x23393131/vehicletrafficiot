{"filter":false,"title":"lorawan_device.py","tooltip":"/lorawan_device.py","undoManager":{"mark":28,"position":28,"stack":[[{"start":{"row":8,"column":0},"end":{"row":10,"column":25},"action":"remove","lines":["MQTT_BROKER = \"127.0.0.1\"","MQTT_PORT = 1883","TOPIC = \"lorawan/traffic\""],"id":5},{"start":{"row":8,"column":0},"end":{"row":11,"column":48},"action":"insert","lines":["CA_PATH = \"certs/AmazonRootCA1.pem\"","CERT_PATH = \"certs/device-certificate.pem.crt\"","KEY_PATH = \"certs/private.pem.key\"","MQTT_BROKER = \"your-iot-endpoint.amazonaws.com\" "]}],[{"start":{"row":11,"column":15},"end":{"row":11,"column":46},"action":"remove","lines":["your-iot-endpoint.amazonaws.com"],"id":6},{"start":{"row":11,"column":15},"end":{"row":11,"column":61},"action":"insert","lines":["a3hyjp4joybycm-ats.iot.us-east-1.amazonaws.com"]}],[{"start":{"row":0,"column":0},"end":{"row":28,"column":0},"action":"remove","lines":["# lorawan_device.py","# Simulates a LoRaWAN end device sending vehicle count data via MQTT","","import json","import time","import paho.mqtt.client as mqtt","from vehicle_detector import detect_vehicles","","CA_PATH = \"certs/AmazonRootCA1.pem\"","CERT_PATH = \"certs/device-certificate.pem.crt\"","KEY_PATH = \"certs/private.pem.key\"","MQTT_BROKER = \"a3hyjp4joybycm-ats.iot.us-east-1.amazonaws.com\" ","","","client = mqtt.Client()","client.connect(MQTT_BROKER, MQTT_PORT, 60)","","print(\"LoRaWAN device started. Sending data to gateway...\")","","try:","    while True:","        data = detect_vehicles()","        print(f\"Sending: {data}\")","        client.publish(TOPIC, json.dumps(data))","        time.sleep(10)  # Simulate LoRa delay","except KeyboardInterrupt:","    print(\"Stopped.\")","    client.disconnect()",""],"id":7},{"start":{"row":0,"column":0},"end":{"row":40,"column":0},"action":"insert","lines":["import json","import time","import ssl","import random","from datetime import datetime","import paho.mqtt.client as mqtt","","# MQTT Config (update endpoint)","MQTT_BROKER = \"YOUR_ENDPOINT.iot.us-east-1.amazonaws.com\"","MQTT_PORT = 8883","MQTT_TOPIC = \"lorawan/traffic\"","","CA_PATH = \"certs/AmazonRootCA1.pem\"","CERT_PATH = \"certs/device-certificate.pem.crt\"","KEY_PATH = \"certs/private.pem.key\"","","def generate_vehicle_data():","    return {","        \"timestamp\": datetime.utcnow().isoformat(),","        \"location\": {\"lat\": 53.349805, \"lng\": -6.26031},","        \"vehicle_count\": random.randint(1, 10)","    }","","client = mqtt.Client()","client.tls_set(ca_certs=CA_PATH, certfile=CERT_PATH, keyfile=KEY_PATH, tls_version=ssl.PROTOCOL_TLSv1_2)","","client.connect(MQTT_BROKER, MQTT_PORT, 60)","client.loop_start()","","print(\"LoRaWAN device started. Sending data to AWS IoT...\")","","try:","    while True:","        data = generate_vehicle_data()","        client.publish(MQTT_TOPIC, json.dumps(data))","        print(\"Sent:\", data)","        time.sleep(5)","except KeyboardInterrupt:","    print(\"Stopped by user.\")","    client.loop_stop()",""]}],[{"start":{"row":8,"column":15},"end":{"row":8,"column":56},"action":"remove","lines":["YOUR_ENDPOINT.iot.us-east-1.amazonaws.com"],"id":8},{"start":{"row":8,"column":15},"end":{"row":8,"column":61},"action":"insert","lines":["a3hyjp4joybycm-ats.iot.us-east-1.amazonaws.com"]}],[{"start":{"row":7,"column":15},"end":{"row":7,"column":31},"action":"remove","lines":["update endpoint)"],"id":10},{"start":{"row":7,"column":14},"end":{"row":7,"column":15},"action":"remove","lines":["("]},{"start":{"row":7,"column":13},"end":{"row":7,"column":14},"action":"remove","lines":[" "]}],[{"start":{"row":0,"column":0},"end":{"row":40,"column":0},"action":"remove","lines":["import json","import time","import ssl","import random","from datetime import datetime","import paho.mqtt.client as mqtt","","# MQTT Config","MQTT_BROKER = \"a3hyjp4joybycm-ats.iot.us-east-1.amazonaws.com\"","MQTT_PORT = 8883","MQTT_TOPIC = \"lorawan/traffic\"","","CA_PATH = \"certs/AmazonRootCA1.pem\"","CERT_PATH = \"certs/device-certificate.pem.crt\"","KEY_PATH = \"certs/private.pem.key\"","","def generate_vehicle_data():","    return {","        \"timestamp\": datetime.utcnow().isoformat(),","        \"location\": {\"lat\": 53.349805, \"lng\": -6.26031},","        \"vehicle_count\": random.randint(1, 10)","    }","","client = mqtt.Client()","client.tls_set(ca_certs=CA_PATH, certfile=CERT_PATH, keyfile=KEY_PATH, tls_version=ssl.PROTOCOL_TLSv1_2)","","client.connect(MQTT_BROKER, MQTT_PORT, 60)","client.loop_start()","","print(\"LoRaWAN device started. Sending data to AWS IoT...\")","","try:","    while True:","        data = generate_vehicle_data()","        client.publish(MQTT_TOPIC, json.dumps(data))","        print(\"Sent:\", data)","        time.sleep(5)","except KeyboardInterrupt:","    print(\"Stopped by user.\")","    client.loop_stop()",""],"id":11}],[{"start":{"row":0,"column":0},"end":{"row":45,"column":0},"action":"insert","lines":["# lorawan_device.py","# Simulated LoRaWAN device using AWS IoT MQTT","","import json","import time","import ssl","import random","from datetime import datetime","import paho.mqtt.client as mqtt","","# AWS IoT MQTT Config","MQTT_BROKER = \"YOUR_ENDPOINT.iot.us-east-1.amazonaws.com\"  # Replace with your AWS IoT endpoint","MQTT_PORT = 8883","MQTT_TOPIC = \"lorawan/traffic\"","","# Paths to AWS IoT Core certificates (update if different)","CA_PATH = \"certs/AmazonRootCA1.pem\"","CERT_PATH = \"certs/device-certificate.pem.crt\"","KEY_PATH = \"certs/private.pem.key\"","","def generate_vehicle_data():","    \"\"\"Generates mock traffic data\"\"\"","    return {","        \"timestamp\": datetime.utcnow().isoformat(),","        \"location\": {\"lat\": 53.349805, \"lng\": -6.26031},","        \"vehicle_count\": random.randint(1, 20)","    }","","# MQTT Client Setup","client = mqtt.Client()","client.tls_set(ca_certs=CA_PATH, certfile=CERT_PATH, keyfile=KEY_PATH, tls_version=ssl.PROTOCOL_TLSv1_2)","client.connect(MQTT_BROKER, MQTT_PORT, 60)","client.loop_start()","","print(\"🚀 LoRaWAN device started. Publishing traffic data...\")","","try:","    while True:","        data = generate_vehicle_data()","        client.publish(MQTT_TOPIC, json.dumps(data))","        print(\"📡 Sent:\", data)","        time.sleep(5)","except KeyboardInterrupt:","    print(\"🔴 Stopped by user.\")","    client.loop_stop()",""],"id":12}],[{"start":{"row":11,"column":15},"end":{"row":11,"column":56},"action":"remove","lines":["YOUR_ENDPOINT.iot.us-east-1.amazonaws.com"],"id":13}],[{"start":{"row":11,"column":15},"end":{"row":11,"column":62},"action":"insert","lines":["a3hyjp4joybycm-ats.iot.us-east-1.amazonaws.com\""],"id":14}],[{"start":{"row":11,"column":62},"end":{"row":11,"column":63},"action":"remove","lines":["\""],"id":15}],[{"start":{"row":11,"column":66},"end":{"row":11,"column":67},"action":"insert","lines":["T"],"id":16},{"start":{"row":11,"column":67},"end":{"row":11,"column":68},"action":"insert","lines":["H"]},{"start":{"row":11,"column":68},"end":{"row":11,"column":69},"action":"insert","lines":["i"]},{"start":{"row":11,"column":69},"end":{"row":11,"column":70},"action":"insert","lines":["s"]}],[{"start":{"row":11,"column":70},"end":{"row":11,"column":71},"action":"insert","lines":[" "],"id":17},{"start":{"row":11,"column":71},"end":{"row":11,"column":72},"action":"insert","lines":["i"]},{"start":{"row":11,"column":72},"end":{"row":11,"column":73},"action":"insert","lines":["s"]}],[{"start":{"row":11,"column":73},"end":{"row":11,"column":74},"action":"insert","lines":[" "],"id":18},{"start":{"row":11,"column":74},"end":{"row":11,"column":75},"action":"insert","lines":["m"]},{"start":{"row":11,"column":75},"end":{"row":11,"column":76},"action":"insert","lines":["y"]}],[{"start":{"row":11,"column":76},"end":{"row":11,"column":77},"action":"insert","lines":[" "],"id":19}],[{"start":{"row":11,"column":67},"end":{"row":11,"column":68},"action":"remove","lines":["H"],"id":20}],[{"start":{"row":11,"column":67},"end":{"row":11,"column":68},"action":"insert","lines":["h"],"id":21}],[{"start":{"row":11,"column":77},"end":{"row":11,"column":78},"action":"insert","lines":["e"],"id":22},{"start":{"row":11,"column":78},"end":{"row":11,"column":79},"action":"insert","lines":["n"]},{"start":{"row":11,"column":79},"end":{"row":11,"column":80},"action":"insert","lines":["d"]},{"start":{"row":11,"column":80},"end":{"row":11,"column":81},"action":"insert","lines":["p"]},{"start":{"row":11,"column":81},"end":{"row":11,"column":82},"action":"insert","lines":["o"]},{"start":{"row":11,"column":82},"end":{"row":11,"column":83},"action":"insert","lines":["j"]}],[{"start":{"row":11,"column":82},"end":{"row":11,"column":83},"action":"remove","lines":["j"],"id":23}],[{"start":{"row":11,"column":82},"end":{"row":11,"column":83},"action":"insert","lines":["o"],"id":24},{"start":{"row":11,"column":83},"end":{"row":11,"column":84},"action":"insert","lines":["n"]}],[{"start":{"row":11,"column":83},"end":{"row":11,"column":84},"action":"remove","lines":["n"],"id":25}],[{"start":{"row":11,"column":83},"end":{"row":11,"column":84},"action":"insert","lines":["i"],"id":26},{"start":{"row":11,"column":84},"end":{"row":11,"column":85},"action":"insert","lines":["n"]},{"start":{"row":11,"column":85},"end":{"row":11,"column":86},"action":"insert","lines":["t"]}],[{"start":{"row":11,"column":86},"end":{"row":11,"column":87},"action":"insert","lines":[" "],"id":27}],[{"start":{"row":0,"column":0},"end":{"row":45,"column":0},"action":"remove","lines":["# lorawan_device.py","# Simulated LoRaWAN device using AWS IoT MQTT","","import json","import time","import ssl","import random","from datetime import datetime","import paho.mqtt.client as mqtt","","# AWS IoT MQTT Config","MQTT_BROKER = \"a3hyjp4joybycm-ats.iot.us-east-1.amazonaws.com\"  # This is my endpooint Replace with your AWS IoT endpoint","MQTT_PORT = 8883","MQTT_TOPIC = \"lorawan/traffic\"","","# Paths to AWS IoT Core certificates (update if different)","CA_PATH = \"certs/AmazonRootCA1.pem\"","CERT_PATH = \"certs/device-certificate.pem.crt\"","KEY_PATH = \"certs/private.pem.key\"","","def generate_vehicle_data():","    \"\"\"Generates mock traffic data\"\"\"","    return {","        \"timestamp\": datetime.utcnow().isoformat(),","        \"location\": {\"lat\": 53.349805, \"lng\": -6.26031},","        \"vehicle_count\": random.randint(1, 20)","    }","","# MQTT Client Setup","client = mqtt.Client()","client.tls_set(ca_certs=CA_PATH, certfile=CERT_PATH, keyfile=KEY_PATH, tls_version=ssl.PROTOCOL_TLSv1_2)","client.connect(MQTT_BROKER, MQTT_PORT, 60)","client.loop_start()","","print(\"🚀 LoRaWAN device started. Publishing traffic data...\")","","try:","    while True:","        data = generate_vehicle_data()","        client.publish(MQTT_TOPIC, json.dumps(data))","        print(\"📡 Sent:\", data)","        time.sleep(5)","except KeyboardInterrupt:","    print(\"🔴 Stopped by user.\")","    client.loop_stop()",""],"id":28},{"start":{"row":0,"column":0},"end":{"row":46,"column":0},"action":"insert","lines":["# lorawan_device.py","import time","import json","import random","import paho.mqtt.client as mqtt","","# MQTT endpoint (replace if you have your own)","BROKER = \"your-iot-endpoint.amazonaws.com\"  # 🔁 Replace this!","PORT = 8883","TOPIC = \"lorawan/traffic\"","","# 🔐 TLS and Auth","CA_PATH = \"AmazonRootCA1.pem\"","CERT_PATH = \"certificate.pem.crt\"","KEY_PATH = \"private.pem.key\"","","# MQTT client setup","client = mqtt.Client()","client.tls_set(ca_certs=CA_PATH, certfile=CERT_PATH, keyfile=KEY_PATH)","","def generate_payload():","    return {","        \"timestamp\": time.strftime(\"%Y-%m-%dT%H:%M:%S\"),","        \"location\": {\"lat\": 53.349805, \"lng\": -6.26031},","        \"vehicle_count\": random.randint(0, 20)","    }","","def on_connect(client, userdata, flags, rc):","    print(\"✅ Connected with result code\", rc)","","client.on_connect = on_connect","client.connect(BROKER, PORT, 60)","client.loop_start()","","print(\"🚀 LoRaWAN device started. Sending traffic data...\")","","try:","    while True:","        payload = generate_payload()","        print(\"📡 Sending:\", payload)","        client.publish(TOPIC, json.dumps(payload))","        time.sleep(5)","except KeyboardInterrupt:","    client.loop_stop()","    client.disconnect()","    print(\"🛑 Disconnected.\")",""]}],[{"start":{"row":7,"column":10},"end":{"row":7,"column":41},"action":"remove","lines":["your-iot-endpoint.amazonaws.com"],"id":29},{"start":{"row":7,"column":10},"end":{"row":7,"column":56},"action":"insert","lines":["a3hyjp4joybycm-ats.iot.us-east-1.amazonaws.com"]}],[{"start":{"row":0,"column":0},"end":{"row":46,"column":0},"action":"remove","lines":["# lorawan_device.py","import time","import json","import random","import paho.mqtt.client as mqtt","","# MQTT endpoint (replace if you have your own)","BROKER = \"a3hyjp4joybycm-ats.iot.us-east-1.amazonaws.com\"  # 🔁 Replace this!","PORT = 8883","TOPIC = \"lorawan/traffic\"","","# 🔐 TLS and Auth","CA_PATH = \"AmazonRootCA1.pem\"","CERT_PATH = \"certificate.pem.crt\"","KEY_PATH = \"private.pem.key\"","","# MQTT client setup","client = mqtt.Client()","client.tls_set(ca_certs=CA_PATH, certfile=CERT_PATH, keyfile=KEY_PATH)","","def generate_payload():","    return {","        \"timestamp\": time.strftime(\"%Y-%m-%dT%H:%M:%S\"),","        \"location\": {\"lat\": 53.349805, \"lng\": -6.26031},","        \"vehicle_count\": random.randint(0, 20)","    }","","def on_connect(client, userdata, flags, rc):","    print(\"✅ Connected with result code\", rc)","","client.on_connect = on_connect","client.connect(BROKER, PORT, 60)","client.loop_start()","","print(\"🚀 LoRaWAN device started. Sending traffic data...\")","","try:","    while True:","        payload = generate_payload()","        print(\"📡 Sending:\", payload)","        client.publish(TOPIC, json.dumps(payload))","        time.sleep(5)","except KeyboardInterrupt:","    client.loop_stop()","    client.disconnect()","    print(\"🛑 Disconnected.\")",""],"id":30},{"start":{"row":0,"column":0},"end":{"row":41,"column":0},"action":"insert","lines":["import os","import time","import json","import random","import ssl","import paho.mqtt.client as mqtt","from datetime import datetime","","# ✅ UPDATED certificate paths","CA_PATH = \"certs/AmazonRootCA1.pem\"","CERT_PATH = \"certs/device-certificate.pem.crt\"","KEY_PATH = \"certs/private.pem.key\"","","# MQTT Configuration","BROKER = \"your-iot-endpoint.amazonaws.com\"  # Replace this","PORT = 8883","TOPIC = \"lorawan/traffic\"","","client = mqtt.Client()","","client.tls_set(","    ca_certs=CA_PATH,","    certfile=CERT_PATH,","    keyfile=KEY_PATH,","    tls_version=ssl.PROTOCOL_TLSv1_2",")","","client.connect(BROKER, PORT)","client.loop_start()","","print(\"🚀 LoRaWAN device started. Publishing traffic data...\")","","while True:","    payload = {","        \"timestamp\": str(datetime.utcnow()),","        \"location\": {\"lat\": 53.349805, \"lng\": -6.26031},","        \"vehicle_count\": random.randint(1, 20)","    }","    client.publish(TOPIC, json.dumps(payload))","    print(\"📡 Sent:\", payload)","    time.sleep(5)",""]}],[{"start":{"row":14,"column":10},"end":{"row":14,"column":41},"action":"remove","lines":["your-iot-endpoint.amazonaws.com"],"id":31},{"start":{"row":14,"column":10},"end":{"row":14,"column":56},"action":"insert","lines":["a3hyjp4joybycm-ats.iot.us-east-1.amazonaws.com"]}],[{"start":{"row":8,"column":4},"end":{"row":8,"column":5},"action":"remove","lines":["U"],"id":32},{"start":{"row":8,"column":3},"end":{"row":8,"column":4},"action":"remove","lines":[" "]},{"start":{"row":8,"column":2},"end":{"row":8,"column":3},"action":"remove","lines":["✅"]}],[{"start":{"row":30,"column":7},"end":{"row":30,"column":9},"action":"remove","lines":["🚀"],"id":37}],[{"start":{"row":39,"column":11},"end":{"row":39,"column":13},"action":"remove","lines":["📡"],"id":38}]]},"ace":{"folds":[],"scrolltop":264.59999999999997,"scrollleft":0,"selection":{"start":{"row":39,"column":11},"end":{"row":39,"column":11},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":16,"state":"start","mode":"ace/mode/python"}},"timestamp":1754660451914,"hash":"f9d8e1d96c7846217062b3732e1cfcf12d919140"}